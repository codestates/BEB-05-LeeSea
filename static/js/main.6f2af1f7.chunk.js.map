{"version":3,"sources":["redux/accountSlice.js","components/Navbar.js","pages/Home.js","global_variables.js","erc721Abi.js","redux/tokenSlice.js","components/MyToken.js","pages/Profile.js","components/images/spinner.gif","components/Loading.js","pages/Create.js","components/Erc721.js","pages/Explore.js","pages/TokenDetail.js","App.js","redux/index.js","index.js"],"names":["name","getAccounts","window","ethereum","enable","request","method","fetchAccount","createAsyncThunk","accounts","accountSlice","createSlice","initialState","address","loading","reducers","setAccount","state","action","payload","extraReducers","pending","type","fulfilled","rejected","accountActions","actions","Navbar","account","useSelector","dispatch","useDispatch","connectWallet","className","to","src","onClick","Home","width","height","alt","CONTRACT_ADDR","process","CONTRACT_ABI","initializeWeb3","thunkAPI","getState","web3","Web3","tokenActions","setWeb3","initializeTokenContract","tokenContract","eth","Contract","contractAddr","methods","call","contractName","symbol","tokenSymbol","setTokenContract","fetchTokenWithContractAndTokenId","tokenId","tokenURI","axios","get","response","tokenMetadata","data","image","replace","ownerOf","tokenOwner","owner","updateTokenOwner","myAddress","console","log","transferFrom","send","from","on","receipt","setTotalSupply","_","totalSupply","parseInt","setMyTokenIds","myTokenIds","String","toLowerCase","push","fetchToken","tokenSlice","tokens","description","collection","properties","MyToken","token","useEffect","Profile","role","map","Loading","isLoading","Spinner","Create","useState","fileBlob","setFileBlob","setName","desc","setDesc","setCollection","isNotValidated","setIsNotValidated","setIsLoading","createNft","client","NFTStorage","store","metadata","url","slice","mintNFT","gas","gasPrice","res","accept","onChange","e","target","files","handleChangeImgSrc","placeholder","value","Erc721","Explore","Array","idx","TokenDetail","useParams","price","setPrice","includes","isNaN","App","path","element","persistConfig","key","version","whitelist","storage","rootReducer","combineReducers","reducer","persistedReducer","persistReducer","configureStore","middleware","thunk","logger","devTools","persistor","persistStore","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.6f2af1f7.chunk.js","sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\n\r\n\r\nconst name = \"ACCOUNT\";\r\nconst initialState = {\r\n    address: \"\",\r\n    loading: false,\r\n}\r\n\r\nconst getAccounts = async() => {\r\n    await window.ethereum.enable();\r\n    return await window.ethereum.request({\r\n        method: \"eth_requestAccounts\",\r\n    });\r\n}\r\n\r\nconst fetchAccount = createAsyncThunk(\r\n    `${name}/FETCH`,\r\n    async () => {\r\n        const accounts = await getAccounts();\r\n        return accounts[0];\r\n    }\r\n);\r\n\r\nexport const accountSlice = createSlice({\r\n    name: name,\r\n    initialState: initialState,\r\n    reducers: {\r\n        setAccount: (\r\n            state,\r\n            action\r\n        ) => {\r\n            state.address = action.payload\r\n        }\r\n    },\r\n    extraReducers: {\r\n        [fetchAccount.pending.type]: (state, action) => {\r\n            state.loading = true;\r\n        },\r\n        [fetchAccount.fulfilled.type]: (state, action) => {\r\n            state.loading = false;\r\n            state.address = action.payload;\r\n        },\r\n        [fetchAccount.rejected.type]: (state, action) => {\r\n            state.loading = false;\r\n        }\r\n    }\r\n});\r\n\r\nexport const accountActions = {...accountSlice.actions, fetchAccount};\r\n","import { Link } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from 'react-redux'; // redux\r\nimport './styles/Navbar.css';\r\nimport { accountActions } from \"../redux/accountSlice\";\r\n\r\nfunction Navbar({ }) {\r\n    const account = useSelector((state) => state.account.address);\r\n    const dispatch = useDispatch()\r\n\r\n    const connectWallet = async () => {\r\n        dispatch(accountActions.fetchAccount());\r\n    }\r\n\r\n    return (\r\n        <div className=\"gnb\">\r\n            <nav className=\"nav\">\r\n                <div className=\"container-fluid\">\r\n                    {/* logo */}\r\n                    <Link to=\"/\" className=\"navbar-brand\">\r\n                        {/* <img src=\"https://ipfs.io/ipfs/QmYU1BhbqiNreJN5T6L7LUBHtHtYiWWjeh5RhkgapEsK7Q?filename=QmYU1BhbqiNreJN5T6L7LUBHtHtYiWWjeh5RhkgapEsK7Q\" alt=\"\" width=\"30\" height=\"24\" className=\"logo d-inline-block align-text-top\" /> */}\r\n                        LeeSea\r\n                    </Link>\r\n                    {/* items */}\r\n                    <div className=\"navbar-items\">\r\n                        <Link to=\"/\" className=\"nav-item\">Home</Link>\r\n                        <Link to=\"/explore\" className=\"nav-item\">Explore</Link>\r\n                        <Link to=\"/create\" className=\"nav-item\">Create</Link>\r\n                        <Link to=\"/profile\" className=\"nav-item\">Profile</Link>\r\n                        {\r\n                            account\r\n                            ? <img className=\"connect-wallet-img\" src=\"https://seeklogo.com/images/M/metamask-logo-09EDE53DBD-seeklogo.com.png\" />\r\n                            : <button type=\"button\" className=\"connect-wallet-btn btn btn-primary\" onClick={connectWallet}>Wallet</button>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Home = () => {\r\n\treturn (\r\n\t\t<div className='home-container'>\r\n\t\t\t<div className='home-title-section'>\r\n\t\t\t\t<div className='home-title-area'>\r\n\t\t\t\t\t<h1 className='home-title'>Welcome to LeeSea!<br></br>Discover, collect, and sell extraordinary NFTs</h1>\r\n\t\t\t\t\t<h3 className='home-description'>LeeSea가 만든 NFT마켓에 지금 참여하세요.</h3>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='home-btn-area'>\r\n\t\t\t\t\t<Link to=\"/explore\"><button type=\"button\" className=\"home-btn go-to-explore\">Explore</button></Link>\r\n\t\t\t\t\t<Link to=\"/create\"><button type=\"button\" className=\"home-btn go-to-create\">Create</button></Link>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"home-title-image\" >\r\n\t\t\t\t<img className='image-item' src=\"https://cdn.pixabay.com/photo/2016/07/11/11/48/printing-on-t-shirt-1509512_1280.png\" width=\"100%\" height=\"100%\" alt='...'></img>\r\n\t\t\t\t<img className='image-item' src=\"https://cdn.pixabay.com/photo/2016/09/12/05/41/van-gogh-1663090_1280.jpg\" width=\"100%\" height=\"100%\" alt='...'></img>\r\n\t\t\t\t<img className='image-item' src=\"https://cdn.pixabay.com/photo/2020/06/06/11/48/caricature-5266261_1280.jpg\" width=\"100%\" height=\"100%\" alt='...'></img>\r\n\t\t\t\t<img className='image-item' src=\"https://cdn.pixabay.com/photo/2018/03/20/10/04/illustrator-3242713_1280.jpg\" width=\"100%\" height=\"100%\" alt='...'></img>\r\n\t\t\t\t<img className='image-item' src=\"https://cdn.pixabay.com/photo/2017/03/19/15/14/happiness-2156794_1280.png\" width=\"100%\" height=\"100%\" alt='...'></img>\r\n\t\t\t\t<img className='image-item' src=\"https://cdn.pixabay.com/photo/2018/04/09/19/55/low-poly-3305284_1280.jpg\" width=\"100%\" height=\"100%\" alt='...'></img>\r\n\t\t\t\t<img className='image-item' src=\"https://cdn.pixabay.com/photo/2020/05/19/13/48/cartoon-5190942_1280.jpg\" width=\"100%\" height=\"100%\" alt='...'></img>\r\n\t\t\t\t<img className='image-item' src=\"https://cdn.pixabay.com/photo/2020/06/10/02/22/caricature-5280770_1280.jpg\" width=\"100%\" height=\"100%\" alt='...'></img>\r\n\t\t\t</div>\r\n\t\t\t{/* <img className=\"home-title-image\" src=\"\" width=\"100%\" height=\"100%\" alt='...'></img> */}\t\t\t\r\n\t\t</div>\r\n\t);\r\n\r\n}\r\n\r\n\r\nexport default Home;","// 환경변수\r\nimport erc721Abi from \"./erc721Abi\";\r\nimport erc721AbiLocal from \"./erc721AbiLocal\";\r\n\r\nexport const SKIP_PREFLIGHT_CHECK = process.env.REACT_APP_SKIP_PREFLIGHT_CHECK === 'true';\r\nexport const USE_GANACHE = process.env.REACT_APP_USE_GANACHE === 'true';\r\nexport const NFT_STORAGE_API_KEY = process.env.REACT_APP_NFT_STORAGE_API_KEY;\r\nexport const CONTRACT_ADDR = process.env.REACT_APP_CONTRACT_ADDR;\r\n\r\nconst getContractABI = () => {\r\n    if (USE_GANACHE) {\r\n        return erc721AbiLocal[\"abi\"];\r\n    } else {\r\n        return erc721Abi\r\n    }\r\n}\r\n\r\nexport const CONTRACT_ABI = getContractABI();\r\n","const erc721Abi = [\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"constructor\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"owner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"approved\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"Approval\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"owner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"operator\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"bool\",\r\n\t\t\t\t\"name\": \"approved\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"ApprovalForAll\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"to\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"approve\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"recipient\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"tokenURI\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"mintNFT\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"previousOwner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"newOwner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"OwnershipTransferred\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"renounceOwnership\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"from\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"to\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"safeTransferFrom\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"from\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"to\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bytes\",\r\n\t\t\t\t\"name\": \"data\",\r\n\t\t\t\t\"type\": \"bytes\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"safeTransferFrom\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"operator\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bool\",\r\n\t\t\t\t\"name\": \"approved\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"setApprovalForAll\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"from\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"to\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"Transfer\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"from\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"to\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"transferFrom\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"newOwner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"transferOwnership\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"owner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"balanceOf\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"getApproved\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"owner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"operator\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"isApprovedForAll\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bool\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"name\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"owner\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"ownerOf\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bytes4\",\r\n\t\t\t\t\"name\": \"interfaceId\",\r\n\t\t\t\t\"type\": \"bytes4\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"supportsInterface\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bool\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"symbol\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"index\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"tokenByIndex\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"owner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"index\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"tokenOfOwnerByIndex\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"tokenURI\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"totalSupply\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t}\r\n]\r\n\r\nexport default erc721Abi","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport axios from 'axios';\r\n// import erc721Abi from \"../erc721Abi\";\r\nimport { CONTRACT_ADDR as contractAddr, CONTRACT_ABI } from '../global_variables';\r\nimport Web3 from 'web3';\r\n\r\n\r\nconst name = \"TOKEN\";\r\nconst initialState = {\r\n    web3: null,\r\n    tokenContract: null,\r\n    tokens: {},\r\n    totalSupply: 0,\r\n    contractName: null,\r\n    tokenSymbol: null,\r\n    myTokenIds: [],\r\n};\r\n\r\nconst initializeWeb3 = async (thunkAPI) => {\r\n    if (!thunkAPI.getState().web3) {\r\n        const web3 = new Web3(window.ethereum);\r\n        await thunkAPI.dispatch(tokenActions.setWeb3(web3));\r\n        return web3;\r\n    }\r\n    return thunkAPI.getState().web3\r\n};\r\n\r\nconst initializeTokenContract = async (thunkAPI) => {\r\n    if (!thunkAPI.getState().tokenContract) {\r\n        const web3 = await initializeWeb3(thunkAPI);\r\n        const tokenContract = await new web3.eth.Contract(\r\n            CONTRACT_ABI,\r\n            contractAddr\r\n        );\r\n        const contractName = await tokenContract.methods.name().call();\r\n        const tokenSymbol = await tokenContract.methods.symbol().call();\r\n        await thunkAPI.dispatch(tokenActions.setTokenContract({tokenContract, contractName, tokenSymbol}));\r\n        return tokenContract;\r\n    }\r\n    return thunkAPI.getState().tokenContract\r\n};\r\n\r\nconst fetchTokenWithContractAndTokenId = async (tokenContract, tokenId) => {\r\n    const tokenURI = await tokenContract.methods\r\n        .tokenURI(tokenId)\r\n        .call();\r\n    const response = await axios.get(tokenURI);\r\n    const tokenMetadata = response.data;\r\n    tokenMetadata.image = tokenMetadata.image.replace(\"ipfs://\", \"https://ipfs.io/ipfs/\");\r\n    const tokenOwner = await tokenContract.methods.ownerOf(tokenId).call();\r\n    return {\r\n        ...tokenMetadata,\r\n        tokenId: tokenId,\r\n        owner: tokenOwner\r\n    };\r\n}\r\n\r\nconst updateTokenOwner = createAsyncThunk(\r\n    `${name}/UPDATE_TOKEN_OWNER`,\r\n    async ({tokenId, myAddress}, thunkAPI) => {\r\n        console.log(\"*************************\")\r\n        console.log(tokenId);\r\n        console.log(myAddress);\r\n        const tokenContract = await initializeTokenContract(thunkAPI);\r\n        const tokenOwner = await tokenContract.methods.ownerOf(tokenId).call();\r\n        console.log(tokenOwner);\r\n        await tokenContract.methods\r\n            .transferFrom(tokenOwner, myAddress, tokenId)\r\n            .send({from: tokenOwner})\r\n            .on(\"receipt\", (receipt) => {\r\n                if (receipt) {\r\n                    return receipt;\r\n                }\r\n                return false;\r\n            });\r\n        return await fetchTokenWithContractAndTokenId(tokenContract, tokenId);\r\n    }\r\n);\r\n\r\nconst setTotalSupply = createAsyncThunk(\r\n    `${name}/SET_TOTAL_SUPPLY`,\r\n    async (_, thunkAPI) => {\r\n        const tokenContract = await initializeTokenContract(thunkAPI);\r\n        const totalSupply = await tokenContract.methods.totalSupply().call();\r\n        return parseInt(totalSupply);\r\n    }\r\n);\r\n\r\nconst setTokenContract = createAsyncThunk(\r\n    `${name}/SET_TOKEN_CONTRACT`,\r\n    async (_, thunkAPI) => {\r\n        if (!thunkAPI.getState().tokenContract) {\r\n            const web3 = await initializeWeb3(thunkAPI);\r\n            const tokenContract = await new web3.eth.Contract(\r\n                CONTRACT_ABI,\r\n                contractAddr\r\n            );\r\n            return tokenContract;\r\n        }\r\n        return thunkAPI.getState().tokenContract\r\n    }\r\n);\r\n\r\nconst setMyTokenIds = createAsyncThunk(\r\n    `${name}/SET_MY_TOKEN_IDS`,\r\n    async (myAddress, thunkAPI) => {\r\n        const myTokenIds = [];\r\n        const tokenContract = await initializeTokenContract(thunkAPI);\r\n        const totalSupply = await tokenContract.methods.totalSupply().call();\r\n        for (let tokenId = 1; tokenId<=totalSupply; tokenId++){\r\n            const tokenOwner = await tokenContract.methods.ownerOf(tokenId).call();\r\n            if (String(tokenOwner).toLowerCase()===myAddress) {\r\n                myTokenIds.push(tokenId);\r\n            }\r\n        }\r\n        return myTokenIds;\r\n    }\r\n);\r\n\r\nconst fetchToken = createAsyncThunk(\r\n    `${name}/FETCH`,\r\n    async (tokenId, thunkAPI) => {\r\n        const tokenContract = await initializeTokenContract(thunkAPI);\r\n        return await fetchTokenWithContractAndTokenId(tokenContract, tokenId);\r\n    }\r\n);\r\n\r\nexport const tokenSlice = createSlice({\r\n    name: name,\r\n    initialState: initialState,\r\n    reducers: {\r\n        setWeb3: (\r\n            state,\r\n            action\r\n        ) => {\r\n            state.web3 = action.payload\r\n        },\r\n        setTokenContract: (\r\n            state,\r\n            action\r\n        ) => {\r\n            state.tokenContract = action.payload.tokenContract\r\n            state.contractName = action.payload.contractName\r\n            state.tokenSymbol = action.payload.tokenSymbol\r\n        }\r\n    },\r\n    extraReducers: {\r\n        [fetchToken.fulfilled.type]: (state, action) => {\r\n            state.tokens = {\r\n                ...state.tokens,\r\n                [action.payload.tokenId]: {\r\n                    name: action.payload.name,\r\n                    description: action.payload.description,\r\n                    collection: action.payload.properties.collection || 'pepe',\r\n                    // price: action.payload.properties.price,\r\n                    image: action.payload.image,\r\n                    owner: action.payload.owner\r\n                }\r\n            }\r\n        },\r\n        [setTotalSupply.fulfilled.type]: (state, action) => {\r\n            state.totalSupply = action.payload;\r\n        },\r\n        [setTokenContract.fulfilled.type]: (state, action) => {\r\n            state.tokenContract = state.tokenContract || action.payload;\r\n        },\r\n        [setMyTokenIds.fulfilled.type]: (state, action) => {\r\n            state.myTokenIds = action.payload;\r\n        },\r\n        [updateTokenOwner.fulfilled.type]: (state, action) => {\r\n            state.tokens = {\r\n                ...state.tokens,\r\n                [action.payload.tokenId]: {\r\n                    name: action.payload.name,\r\n                    description: action.payload.description,\r\n                    collection: action.payload.properties.collection || 'pepe',\r\n                    // price: action.payload.properties.price,\r\n                    image: action.payload.image,\r\n                    owner: action.payload.owner\r\n                }\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\nexport const tokenActions = {\r\n    ...tokenSlice.actions,\r\n    fetchToken,\r\n    setTotalSupply,\r\n    setTokenContract,\r\n    setMyTokenIds,\r\n    updateTokenOwner\r\n};\r\n","import { Link, useParams } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\nimport { tokenActions } from '../redux/tokenSlice'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\n\r\nfunction MyToken({ tokenId }){\r\n  const tokenMetadata = useSelector((state) => state.token.tokens[tokenId]);\r\n  const dispatch = useDispatch()\r\n  useEffect(() => {\r\n      dispatch(tokenActions.fetchToken(tokenId));\r\n  }, [])\r\n  return tokenMetadata ? (\r\n    <div className = \"MyToken\">\r\n      <Link to={`/explore/${tokenId}`}>\r\n      <div className=\"col\">\r\n        <div className=\"card\">\r\n          <img src={tokenMetadata.image} className=\"card-img-top\" alt=\"...\" />\r\n          <div className=\"card-body\">\r\n            <h5 className=\"card-title\">{tokenMetadata.name}</h5>\r\n              {/* <p className=\"card-text\">\r\n                <img width={10} src=\"https://static.opensea.io/general/ETH.svg\" />\r\n                {tokenMetadata.price}\r\n              </p> */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      </Link>\r\n    </div>\r\n  ): null;\r\n}\r\n\r\nexport default MyToken;","import { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux'; // redux\r\n// import '../components/styles/Profile.css';\r\nimport MyToken from '../components/MyToken';\r\nimport { accountActions } from '../redux/accountSlice';\r\nimport { tokenActions } from '../redux/tokenSlice'\r\n\r\n\r\nfunction Profile() {\r\n  const tokenContract = useSelector((state) => state.token.tokenContract);\r\n  const myTokenIds = useSelector((state) => state.token.myTokenIds);\r\n  const account = useSelector((state) => state.account.address);\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(tokenActions.setTokenContract());\r\n    if (account) {\r\n      dispatch(tokenActions.setMyTokenIds(account));\r\n    }\r\n  }, [tokenContract, account])\r\n\r\n  const signout = () => {\r\n      dispatch(accountActions.setAccount(''))\r\n  }\r\n\r\n  return tokenContract? (\r\n    <div className=\"Profile\">\r\n      {/* 지갑 연결이 안 된 경우 */}\r\n      <div className={account ? \"hidden\" : \"\"}>\r\n        <div className=\"alert alert-danger\" role=\"alert\">\r\n          Please connect to your wallet first.\r\n        </div>\r\n      </div>\r\n\r\n      {/* 지갑 연결이 된 경우 */}\r\n      <div className={!account ? \"hidden\" : \"\"}>\r\n        <div className=\"profile-header\">\r\n          <div className=\"profile-header-1\">\r\n            <h2 className=\"profile-header-title\">Profile</h2>\r\n            <button type=\"button\" className=\"logout-btn\" onClick={signout}>로그아웃</button>\r\n          </div>\r\n          <div className=\"profile-header-2\">\r\n            <img className=\"profile-header-2-image\" src=\"https://static.opensea.io/general/ETH.svg\" />\r\n            <p className=\"account-address\">{account}</p>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"profile-contents\">\r\n          <h5 className=\"profile-item-header\">내 NFT 목록</h5>\r\n            <div className=\"profile-items\">\r\n              {myTokenIds.map((tokenId) => <MyToken tokenId={tokenId} key={tokenId} />)}\r\n            </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ): null;\r\n}\r\n\r\nexport default Profile","export default __webpack_public_path__ + \"static/media/spinner.602e520c.gif\";","import Spinner from './images/spinner.gif';\r\n// import './styles/Loading.css'\r\n\r\nconst Loading = ({ isLoading }) => {\r\n\treturn(\r\n\t\t<div className=\"Loading\">\r\n            <div className=\"loading-container\">\r\n                <div className=\"loading-text\">\r\n                    <div>잠시만 기다려 주세요</div>\r\n                    <img src={Spinner} alt=\"spinner가 돌아간다\" width=\"50%\" />\r\n                    {\r\n                        isLoading === 1\r\n                        ? <div>처리 중입니다...</div>\r\n                        : ( isLoading === 2\r\n                            ? <div>IPFS에 데이터 업로드를 완료했습니다!</div>\r\n                            : <div>컨트랙트에서 데이터 처리 중입니다...</div>\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n\t\t</div>\r\n\t);\r\n \r\n}\r\n\r\n\r\nexport default Loading;","import { useEffect, useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport '../components/styles/Create.css'\r\nimport { NFTStorage } from \"nft.storage/dist/bundle.esm.min.js\";\r\nimport { NFT_STORAGE_API_KEY as API_KEY } from '../global_variables'\r\nimport Loading from '../components/Loading';\r\nimport { tokenActions } from '../redux/tokenSlice'\r\n\r\n\r\nfunction Create() {\r\n    const tokenContract = useSelector((state) => state.token.tokenContract);\r\n    let [fileBlob, setFileBlob] = useState(\"\")\r\n    let [name, setName] = useState(\"\")\r\n    let [desc, setDesc] = useState(\"\")\r\n    let [collection, setCollection] = useState(\"\")\r\n    const account = useSelector((state) => state.account.address);\r\n    let [isNotValidated, setIsNotValidated] = useState(false)\r\n    let [isLoading, setIsLoading] = useState(false)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(tokenActions.setTokenContract());\r\n    }, [])\r\n\r\n    let handleChangeImgSrc = (target) => {\r\n        console.log(target.files[0])\r\n        let fileBlob = target.files[0]\r\n        setFileBlob(fileBlob)\r\n    }\r\n    let handleChangeName = (value) => {\r\n        setName(value)\r\n    }\r\n    let handleChangeDesc = (value) => {\r\n        setDesc(value)\r\n    }\r\n    let handleChangeCollection = (value) => {\r\n        setCollection(value)\r\n    }\r\n    let createNft = async () => {\r\n        if (fileBlob === \"\") setIsNotValidated(1)\r\n        else if (name === \"\") setIsNotValidated(2)\r\n        else if (desc === \"\") setIsNotValidated(3)\r\n        else if (collection === \"\") setIsNotValidated(4)\r\n        else {\r\n            setIsLoading(1)\r\n            setIsNotValidated(false)\r\n            try {\r\n                let image = fileBlob\r\n                let data = {\r\n                    image,\r\n                    name: name,\r\n                    description: desc,\r\n                    properties: {\r\n                        collection: collection\r\n                    }\r\n                }\r\n\r\n                let client = new NFTStorage({ token: API_KEY })\r\n                let metadata = await client.store(data)\r\n                setIsLoading(2)\r\n\r\n                let url = metadata.url.slice(7)\r\n                let tokenURI = `https://ipfs.io/ipfs/${url}`\r\n                console.log(tokenURI)\r\n\r\n                setIsLoading(3)\r\n                console.log(account);\r\n                await tokenContract.methods.mintNFT(account, tokenURI).send({\r\n                    from: account,\r\n                    gas: 1500000,\r\n                    gasPrice: '3000000'\r\n                })\r\n                    .on('receipt', (res) => {\r\n                        console.log(res)\r\n                        // window.location.reload()\r\n                    })\r\n            }\r\n            catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        setIsLoading(false)\r\n    }\r\n\r\n    return (\r\n        <div className=\"Create\">\r\n            {/* 지갑 연결이 안 된 경우 */}\r\n            <div className={account ? \"hidden\" : \"\"}>\r\n                <div className=\"alert alert-danger\" role=\"alert\">\r\n                    Please connect to your wallet first.\r\n                </div>\r\n            </div>\r\n\r\n            {/* Loading Spinner */}\r\n            <div className={!isLoading ? \"hidden\" : \"\"}>\r\n                <Loading isLoading={isLoading} />\r\n            </div>\r\n\r\n            {/* 지갑 연결이 된 경우 */}\r\n            <div className={!account ? \"hidden\" : \"\"}>\r\n                <div className=\"create-header\">\r\n                    <h2 className=\"create-header-title\">Create New Item</h2>\r\n                    <p className=\"create-description\">Lorem ipsum dolor sit, amet consectetur adipisicing elit. Enim ipsa vitae fugiat, ullam similique quisquam magni, eveniet maxime earum dolor vero minus est laudantium ducimus quia sed amet aspernatur ipsum!</p>\r\n                </div>\r\n\r\n                {/* divide into 2 columns */}\r\n                <div className=\"create-contents\">  {/* row align-items-start */}\r\n                    {/* column 1 */}\r\n                    <div className=\"create-inner-area\">\r\n                        <div className=\"create-item-img\">{/* file-area col */}\r\n                            {/* file-area-label */}\r\n                            <label className=\"create-upload-file\">Upload Image</label>\r\n                            {/* file-area-input */}\r\n                            <input className=\"create-upload-btn\" type=\"file\" accept=\"image/*\" onChange={(e) => handleChangeImgSrc(e.target)} />\r\n                        </div>\r\n                        <div className=\"create-item-info\"> {/* col */}\r\n                            <label className=\"create-input-label\">아이템 이름*</label>\r\n                            <input type=\"text\" className=\"create-form-name\" placeholder=\"Item name\" onChange={(e) => handleChangeName(e.target.value)} />\r\n                            <label className=\"create-input-label\">아이템 설명*</label>\r\n                            <input type=\"text\" className=\"create-form-name\" placeholder=\"Provide a detailed description of your item.\" onChange={(e) => handleChangeDesc(e.target.value)} />\r\n                            <label className=\"create-input-label\">컬렉션 이름*</label>\r\n                            <input type=\"text\" className=\"create-form-name\" placeholder=\"Collection Name\" onChange={(e) => handleChangeCollection(e.target.value)} />\r\n                        </div>\r\n                        {/* 하단 버튼 */}\r\n                    </div>\r\n                    <div className=\"create-btns\">\r\n                        <button type=\"button\" className=\"create-btn btn-create btn\" onClick={createNft}>만들기</button>\r\n                        <button type=\"button\" className=\"create-btn btn-cancel btn\">취소하기</button>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* 유효성 검사 문구 */}\r\n                <div className={!isNotValidated ? \"validation-content\" : \"\"}>\r\n                    {\r\n                        isNotValidated === 1\r\n                            ? <p className=\"validation-text\"> 이미지 파일을 업로드하세요.</p>\r\n                            : (isNotValidated === 2\r\n                                ? <p className=\"validation-text\">아이템 이름을 입력하세요.</p>\r\n                                : (isNotValidated === 3\r\n                                    ? <p className=\"validation-text\">아이템 설명을 입력하세요.</p>\r\n                                    : (isNotValidated === 4\r\n                                        ? <p className=\"validation-text\">컬렉션 이름을 입력하세요.</p>\r\n                                        : (isNotValidated === 5\r\n                                            ? <p className=\"validation-text\">가격을 입력하세요.</p>\r\n                                            : <p className=\"validation-text\">가격은 숫자여야 합니다.</p>\r\n                                        )\r\n                                    )\r\n                                )\r\n                            )\r\n                    }\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Create","import { Link } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\nimport { tokenActions } from '../redux/tokenSlice'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport './styles/Erc721.css';\r\n\r\n\r\nfunction Erc721({ tokenId }) {\r\n    const tokenMetadata = useSelector((state) => state.token.tokens[tokenId]);\r\n    // const tokenSymbol = useSelector((state) => state.token.tokenSymbol);\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(tokenActions.fetchToken(tokenId));\r\n    }, [])\r\n    return tokenMetadata ? (\r\n        <div className=\"erc721token\">\r\n            <Link to={`/explore/${tokenId}`}className=\"token-item\">\r\n                <img\r\n                    src={tokenMetadata.image}\r\n                    width={300}\r\n                    className='token-thumb'/>\r\n                {/* name ▼ */}\r\n                <h4 className=\"name\">{tokenMetadata.name}</h4>\r\n                {/* <div className=\"price\">\r\n                    <div className=\"price-img\">\r\n                        <img width={10} src=\"https://static.opensea.io/general/ETH.svg\" />\r\n                    </div>\r\n                    <div className=\"price-text\">\r\n                        {tokenMetadata.price}\r\n                    </div>\r\n                </div> */}\r\n            </Link>\r\n        </div>\r\n    ): null;\r\n}\r\n\r\nexport default Erc721;\r\n","import { useEffect } from 'react';\r\nimport { tokenActions } from '../redux/tokenSlice'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Erc721 from '../components/Erc721';\r\n\r\n\r\nfunction Explore(){\r\n    const totalSupply = useSelector((state) => state.token.totalSupply);\r\n    const account = useSelector((state) => state.account.address);\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(tokenActions.setTotalSupply());\r\n        if (account) {\r\n          dispatch(tokenActions.setMyTokenIds(account));\r\n        }\r\n    }, [account])\r\n    return(\r\n        <div className = \"tokenlist\">\r\n            <h2 className=\"explore-title\">Explore</h2>\r\n            <p className=\"explore-description\">Lorem ipsum dolor sit, amet consectetur adipisicing elit. Enim ipsa vitae fugiat, ullam similique quisquam magni, eveniet maxime earum dolor vero minus est laudantium ducimus quia sed amet aspernatur ipsum!</p>\r\n            <div className=\"erc721List\">\r\n                {[...Array(totalSupply)].map((_, idx) => {\r\n                    const tokenId = idx + 1;\r\n                    return(\r\n                        <Erc721 tokenId={tokenId} key={tokenId}/>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n}  \r\nexport default Explore;\r\n","import { Link, useParams } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { tokenActions } from '../redux/tokenSlice'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport './styles/TokenDetail.css'\r\n\r\n\r\nfunction TokenDetail() {\r\n    const { tokenId } = useParams();\r\n    const tokenMetadata = useSelector((state) => state.token.tokens[tokenId]);\r\n    const myTokenIds = useSelector((state) => state.token.myTokenIds);\r\n    const account = useSelector((state) => state.account.address);\r\n    const [price, setPrice] = useState(\"\")\r\n    const [isNotValidated, setIsNotValidated] = useState(true)\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(tokenActions.fetchToken(tokenId));\r\n        if (account) {\r\n          dispatch(tokenActions.setMyTokenIds(account));\r\n        }\r\n    }, [account]);\r\n\r\n    const buyNFT = () => {\r\n        if (account) {\r\n            dispatch(tokenActions.updateTokenOwner({tokenId, myAddress: account}));\r\n        }\r\n    };\r\n\r\n    const sellNFT = () => {\r\n        if (price === \"\") {\r\n            setIsNotValidated(1)\r\n            return\r\n        }\r\n        else if (isNaN(price)) {\r\n            setIsNotValidated(2)\r\n            return\r\n        }\r\n        setIsNotValidated(false)\r\n    };\r\n\r\n    const handleChangePrice = (value) => {\r\n        setPrice(value)\r\n    }\r\n\r\n    return tokenMetadata ? (        \r\n        <div className=\"token-detail-page\" >\r\n            <img src={tokenMetadata.image} alt=\"\" className=\"tokenDetailThumb\" />\r\n            <div className=\"tokenInfoArea\">\r\n                <h3 className=\"tokenName\">{tokenMetadata.name}</h3>\r\n                <div className=\"tokenDescArea\">\r\n                    <h4 className=\"tokenDesc\">Description</h4>\r\n                    <p className=\"tokenDescBody\">{tokenMetadata.description}</p>\r\n                </div>\r\n                {account && myTokenIds.includes(parseInt(tokenId)) ?\r\n                    <>\r\n                        <label className=\"create-input-label\">판매 가격*</label>\r\n                        <input type=\"text\" className=\"goToList detail-btn\" placeholder=\"Ether Price (ex. 0.5Eth => 0.5)\" onChange={(e) => handleChangePrice(e.target.value)} />\r\n                        <button className=\"buyNFT detail-btn\" onClick={sellNFT}>판매하기</button>\r\n                        <Link to=\"/explore\"><button className=\"goToList detail-btn\">목록으로</button></Link>\r\n                        <div className={!isNotValidated ? \"validation-content\" : \"\"}>\r\n                            {\r\n                                isNotValidated === 1\r\n                                    ? <p className=\"validation-text\">가격을 입력하세요.</p>\r\n                                    : (isNotValidated == 2\r\n                                        ? <p className=\"validation-text\">가격은 숫자여야 합니다.</p>\r\n                                        : null\r\n                                    )\r\n                            }\r\n                        </div>\r\n                    </>\r\n                    : <>\r\n                        <button className=\"buyNFT detail-btn\" onClick={buyNFT}>구매하기</button>\r\n                        <Link to=\"/explore\"><button className=\"goToList detail-btn\">목록으로</button></Link>\r\n                    </>\r\n                }\r\n            </div>\r\n        </div>\r\n    ): null;\r\n}\r\n\r\nexport default TokenDetail;\r\n","import { Route, Routes } from \"react-router-dom\";\r\n\r\nimport './App.css';\r\nimport Navbar from './components/Navbar';\r\nimport { Home, Profile, Create, Explore, TokenDetail } from './pages';\r\n\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Navbar />\r\n      <Routes>\r\n          <Route path=\"/\" element={<Home />} />\r\n          <Route path=\"/explore\" element={<Explore />} />\r\n          <Route path=\"/explore/:tokenId\" element={<TokenDetail />} />\r\n          <Route path=\"/create\" element={<Create />} />\r\n          <Route path=\"/profile\" element={<Profile />} />\r\n      </Routes>\r\n      <footer className='site-footer'>\r\n        <p className='site-footer-text'>Project Team LeeSEA 🚀 </p>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","import { logger } from 'redux-logger';\r\nimport { accountSlice } from './accountSlice';\r\nimport { tokenSlice } from './tokenSlice';\r\nimport { configureStore, combineReducers } from '@reduxjs/toolkit';\r\nimport {\r\n    persistStore,\r\n    persistReducer,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport thunk from 'redux-thunk'\r\n\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    version: 0,\r\n    whitelist: ['account'],\r\n    storage,\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n    account: accountSlice.reducer,\r\n    token: tokenSlice.reducer\r\n});\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nconst store = configureStore({\r\n    reducer: persistedReducer,\r\n    middleware: [thunk, logger],\r\n    devTools: true,\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { BrowserRouter } from 'react-router-dom'; // react-router\r\nimport { Provider } from 'react-redux'; // redux\r\nimport store, { persistor } from './redux';  // redux\r\nimport { PersistGate } from 'redux-persist/integration/react';\t// redux-persist\r\n\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\n\r\nroot.render(\r\n  <Provider store={store}>\r\n    <PersistGate persistor={persistor}>\r\n      <BrowserRouter>\r\n        <App />\r\n      </BrowserRouter>\r\n    </PersistGate>\r\n  </Provider>,\r\n);"],"sourceRoot":""}